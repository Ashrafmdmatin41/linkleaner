name: Deploy
on:
  push:
    tags:
      - "v*"

jobs:
  github_build:
    name: Build release binaries
    runs-on: ubuntu-20.04
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.3.4

      # Cache files between builds
      - name: Setup | Cache Cargo
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: x86_64-unknown-linux-musl

      - name: Setup | Set version
        run: |
          let tmp;
          tmp=$(mktemp)
          echo ${{ github.ref }} > ${tmp}
          sed -i 's/v//' ${tmp}
          echo "VERSION=$(cat "${tmp}")" >> "${GITHUB_ENV}"

      - name: Setup | cargo-deb
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-deb
          version: latest

      - name: Build | Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: deb
          args: --target ${{ matrix.target }}
          use-cross: true

      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: walls-bot-rs.deb
          path: ./target/debian/walls-bot-rs_"${VERSION}"_amd64.deb

  # Create GitHub release with Rust build targets and release notes
  github_release:
    name: Create GitHub Release
    needs: github_build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup | Artifacts
        uses: actions/download-artifact@v2
        with:
          path: deb

      - name: Build | Publish
        uses: softprops/action-gh-release@v1
        with:
          files: deb/*.deb
          body: "Binaries yo"
          draft: true
          prerelease: true
